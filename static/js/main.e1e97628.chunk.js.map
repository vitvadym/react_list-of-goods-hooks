{"version":3,"sources":["Types/SortType.ts","goodsFromServer.tsx","App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","isReversed","setReverse","NONE","sortType","setSort","isVisibleReset","goods","visibleGoods","sort","goodOne","goodTwo","ALPHABET","localeCompare","LENGTH","length","reverse","getReorderedGoods","className","type","onClick","cn","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAAYA,E,qDCACC,G,YAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,Y,SDVUD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,gBEmCL,IAAME,EAAuB,WAClC,MAAiCC,oBAAS,GAA1C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAA4BF,mBAASH,EAASM,MAA9C,mBAAOC,EAAP,KAAiBC,EAAjB,KAmBMC,EAAiBL,GAAcG,IAAaP,EAASM,KAErDI,EAjDD,SACLA,EADK,GAGJ,IADCH,EACF,EADEA,SAAUH,EACZ,EADYA,WAENO,EAAY,YAAOD,GAmBzB,OAjBAC,EAAaC,MAAK,SAACC,EAASC,GAC1B,OAAQP,GACN,KAAKP,EAASe,SACZ,OAAOF,EAAQG,cAAcF,GAE/B,KAAKd,EAASiB,OACZ,OAAOJ,EAAQK,OAASJ,EAAQI,OAElC,QACE,OAAO,MAITd,GACFO,EAAaQ,UAGRR,EA0BOS,CAAkBnB,EAAiB,CAAEG,aAAYG,aAE/D,OACE,sBAAKc,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLC,QAtBe,WACrBf,EAAQR,EAASe,WAsBXM,UAAWG,IAAG,iBACZ,CAAE,WAAYjB,IAAaP,EAASe,WAJxC,iCASA,wBACEO,KAAK,SACLC,QA3Ba,WACnBf,EAAQR,EAASiB,SA2BXI,UAAWG,IAAG,oBACZ,CAAE,WAAYjB,IAAaP,EAASiB,SAJxC,4BASA,wBACEK,KAAK,SACLC,QA5CQ,WACdlB,GAAYD,IA4CNiB,UAAWG,IAAG,oBACZ,CAAE,YAAapB,IAJnB,qBASCK,GACC,wBACEa,KAAK,SACLC,QA1CQ,WAChBlB,GAAW,GACXG,EAAQR,EAASM,OAyCTe,UAAU,4BAHZ,sBAUJ,6BACGX,EAAMe,KAAI,SAAAC,GAAI,OACb,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,YCnGlCC,IAASC,OACP,cAAC,EAAD,CAAKxB,YAAY,EAAOG,SAAUP,EAASM,OAC3CuB,SAASC,eAAe,W","file":"static/js/main.e1e97628.chunk.js","sourcesContent":["export enum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n","export const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n","import React, { useState } from 'react';\nimport cn from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport { goodsFromServer } from './goodsFromServer';\nimport { SortType } from './Types/SortType';\nimport { State } from './Types/State';\nimport { ReorderOptions } from './Types/ReorderOptions';\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((goodOne, goodTwo) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return goodOne.localeCompare(goodTwo);\n\n      case SortType.LENGTH:\n        return goodOne.length - goodTwo.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC<State> = () => {\n  const [isReversed, setReverse] = useState(false);\n  const [sortType, setSort] = useState(SortType.NONE);\n\n  const reverse = () => {\n    setReverse(!isReversed);\n  };\n\n  const sortByAlphabet = () => {\n    setSort(SortType.ALPHABET);\n  };\n\n  const sortByLength = () => {\n    setSort(SortType.LENGTH);\n  };\n\n  const resetList = () => {\n    setReverse(false);\n    setSort(SortType.NONE);\n  };\n\n  const isVisibleReset = isReversed || sortType !== SortType.NONE;\n\n  const goods = getReorderedGoods(goodsFromServer, { isReversed, sortType });\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          onClick={sortByAlphabet}\n          className={cn('button is-info',\n            { 'is-light': sortType !== SortType.ALPHABET })}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={sortByLength}\n          className={cn('button is-success',\n            { 'is-light': sortType !== SortType.LENGTH })}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={reverse}\n          className={cn('button is-warning',\n            { 'is-light': !isReversed })}\n        >\n          Reverse\n        </button>\n\n        {isVisibleReset && (\n          <button\n            type=\"button\"\n            onClick={resetList}\n            className=\"button is-danger is-light\"\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {goods.map(good => (\n          <li data-cy=\"Good\" key={good}>\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\nimport { SortType } from './Types/SortType';\n\nReactDOM.render(\n  <App isReversed={false} sortType={SortType.NONE} />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}